"use strict";
const qrcode = require('qrcode-terminal');
const googleImage = require('g-i-s');
const moment= require('moment-timezone');
const fs  = require('fs-extra-plus');
const path = require('path');
const yargs  = require('yargs/yargs');
const yts= require( 'yt-search');
const chalk = require('chalk');
const fetch  = require('node-fetch');
const ggs  = require('google-it');
const axios  = require('axios');
const syntaxerror = require('syntax-error');
const request  = require('request');
const util = require('util');
const ffmpeg = require('fluent-ffmpeg');
const speed  = require('performance-now');
const os = require('os');
const Cfonts = require('cfonts');
const baileys = require ('@adiwajshing/baileys');
const { kyun, time, WIB, WITA, WIT, weton, week, date, waktu, tanggal, formatDate, count } = require('../library/Assembly/moment');
const { wait, h2k, getBuffer, generateMessageID, getGroupAdmins, randomBytes, getRandom, runtime } = require('../library/Assembly/func');
const { fetchBase64, fetchText, fetchJson } = require('../library/Assembly/fecther');
const { toAudio, toPTT, toVideo, _ffmpeg, stickUrl } = require('../library/Assembly/convert');
const { nocache, uncachec } = require('../library/Assembly/cache');
const { pickRandom } = require('../library/Assembly/pickRandom');
const { isUrl,	isLinkyt } = require('../library/Assembly/regex');
const { spawn, exec, execSync } = require('child_process');

exports.Functions = class Functions {
constructor() {
this.qrcode = qrcode;
this.count = count;
this.pickRandom = pickRandom;
this.isUrl = isUrl;
this.isLinkyt = isLinkyt;
this.kyun = kyun;
this.time = time;
this.WIB = WIB;
this.WITA = WITA;
this.WIT = WIT;
this.runtime = runtime;
this.weton = weton;
this.week = week;
this.date = date;
this.waktu = waktu;
this.tanggal = tanggal;
this.formatDate = formatDate;
this.wait = wait;
this.h2k = h2k;
this.getBuffer = getBuffer;
this.generateMessageID = generateMessageID;
this.getGroupAdmins = getGroupAdmins;
this.randomBytes = randomBytes;
this.getRandom = getRandom;
this.toAudio = toAudio;
this.toPTT = toPTT;
this.toVideo = toVideo;
this._ffmpeg = _ffmpeg;
this.stickUrl = stickUrl;
this.baileys = baileys;
this.nocache = nocache;
this.uncache = uncachec;
this.spawn = spawn;
this.execSync = execSync;
this.chalk = chalk;
this.syntaxerror = syntaxerror;
this.Cfonts = Cfonts;
this.os = os;
this.path = path;
this.exec = exec;
this.speed = speed;
this.util = util;
this.fetchJson = fetchJson;
this.fetchText = fetchText;
this.fetchBase64 = fetchBase64;
this.ffmpeg = ffmpeg;
this.request = request;
this.axios = axios;
this.ggs = ggs;
this.fetch = fetch;
this.yts = yts;
this.yargs = yargs;
this.path = path;
this.fs = fs;
this.moment = moment;
this.googleImage = googleImage;
}
 }
